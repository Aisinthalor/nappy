"""
test_na_file_<FFI>.py
====================

Tests for the na_file_<FFI>.py module.

"""

# Import standard library modules
import unittest
import os
import sys

# Import local modules
base_dir = os.environ.get("NAPPY_BASE_DIR", "../..")
sys.path.append(base_dir)

import nappy
import nappy.utils.compare_na

class NAFile<FFI>_TestCase(unittest.TestCase):

    def setUp(self):
        self.infile = os.path.join(base_dir, "data_files", "<FFI>.na")
        self.outfile = os.path.join(base_dir, "test_outputs", "test_<FFI>.na")
        self.out_csv = os.path.join(base_dir, "test_outputs", "test_<FFI>.csv")
        self.out_csv_annotated = os.path.join(base_dir, "test_outputs", "test_<FFI>_annotated.csv")
        self.fin = nappy.openNAFile(self.infile)
        self.fin.readData()
        self.na_dict = self.fin.getNADict()        

    def test_read<FFI>(self):
        "Tests reading FFI <FFI>."
        self.assertEqual(type(self.na_dict), type({1:2}))

    def test_write<FFI>(self):
        "Tests writing FFI <FFI>."
        fobj = nappy.openNAFile(self.outfile, mode="w", na_dict=self.na_dict)		
        fobj.write()
        self.failUnless(isinstance(fobj, nappy.na_file.na_file.NAFile))

    def test_writeCSV<FFI>(self):
        "Tests conversion to CSV."
        fobj = nappy.openNAFile(self.out_csv, mode="w", na_dict=self.na_dict)
        fobj.write(delimiter=",", float_format="%.6f")
        self.failUnless(isinstance(fobj, nappy.na_file.na_file.NAFile))

    def test_writeAnnotatedCSV<FFI>(self):
        "Tests conversion to Annotated CSV."
        fobj = nappy.openNAFile(self.out_csv_annotated, mode="w", na_dict=self.na_dict)
        fobj.write(delimiter=",", annotation=True)
        self.failUnless(isinstance(fobj, nappy.na_file.na_file.NAFile))
 
    def test_compareFiles<FFI>(self):
        "Tests comparison of written and original files for equivalence."
        res = nappy.utils.compare_na.compNAFiles(self.infile, self.outfile, approx_equal=True)
        self.assertEqual(res, True)
       
    def test_compareNAToCSV<FFI>(self):
        "Tests comparison of original and CSV version written." 
        res = nappy.utils.compare_na.compNAFiles(self.infile, self.out_csv, delimiter_2=",")
        self.assertEqual(res, True)


if __name__ ==  "__main__":

    unittest.main()


